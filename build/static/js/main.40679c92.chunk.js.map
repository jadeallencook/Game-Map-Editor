{"version":3,"sources":["components/Editor/Toolbar.js","components/Editor/Sidebar/Tiles.js","components/Editor/Sidebar/Events.js","components/Editor/Sidebar/Enemies.js","components/Editor/Sidebar/Items.js","components/Editor/Sidebar.js","components/Editor/Map.js","components/Editor/Zoom.js","pages/Editor.js","components/Play/Player.js","pages/Play.js","services/get-next-position.js","App.js","serviceWorker.js","index.js"],"names":["Toolbar","props","react_default","a","createElement","className","react_router_dom","to","Tiles","tiles","Object","keys","map","uid","_props$tiles$uid","image","walk","key","style","backgroundImage","concat","borderTop","tile","borderRight","borderBottom","borderLeft","onClick","setTile","Events","Enemies","Items","Sidebar","layer","Editor_Sidebar_Tiles","Editor_Sidebar_Events","Editor_Sidebar_Enemies","Editor_Sidebar_Items","Map","x","y","height","size","width","Array","fill","row","column","data-x","data-y","border","opacity","selected","onMouseEnter","event","altKey","updateTile","updateSelected","enemy","firebase","enemies","Zoom","zoom","Editor","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","maps","game","games","title","setState","objectSpread","_this2","document","onkeydown","num","value","target","preventDefault","components_Editor_Toolbar","loadMap","bind","deleteMap","createMap","toggleLayer","components_Editor_Sidebar","components_Editor_Map","components_Editor_Zoom","Component","Player","id","transform","facing","Play","events","history","text","time","Date","toLocaleString","player","position","hearts","xp","attack","defense","start","players","keyCode","direction","nextPosition","isVertical","getNextPosition","nextTile","canMove","JSON","stringify","slice","message","toConsumableArray","_this3","href","download","components_Play_Player","App","auth","user","login","users","react_router","exact","path","component","src_pages_Play","src_pages_Editor","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40679c92.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Toolbar.scss';\n\nconst Toolbar = props => (\n    <div className=\"Toolbar\">\n        <Link to=\"/play\" className=\"btn clickable\">Play</Link>\n    </div>\n);\n\nexport default Toolbar;","import React from 'react';\nimport './Tiles.scss';\n\nconst Tiles = props => (\n    <div className=\"Tiles\">\n        <h2>Tiles</h2>\n        <p>Hold down alt/option to draw with tile.</p>\n        <ul>\n            {\n                (props.tiles) ? Object.keys(props.tiles).map(uid => {\n                    const { image, walk } = props.tiles[uid];\n                    return (\n                        <li\n                            key={uid}\n                            style={{\n                                backgroundImage: `url(/images/tiles/${image})`,\n                                borderTop: (props.tile === uid) ? `solid thin ${(!walk[0]) ? '#F00' : '#FFF'}` : null,\n                                borderRight: (props.tile === uid) ? `solid thin ${(!walk[1]) ? '#F00' : '#FFF'}` : null,\n                                borderBottom: (props.tile === uid) ? `solid thin ${(!walk[2]) ? '#F00' : '#FFF'}` : null,\n                                borderLeft: (props.tile === uid) ? `solid thin ${(!walk[3]) ? '#F00' : '#FFF'}` : null\n                            }}\n                            className=\"clickable\"\n                            onClick={() => props.setTile(uid)}\n                        ></li>\n                    );\n                }) : null\n            }\n        </ul>\n    </div>\n);\n\nexport default Tiles;","import React from 'react';\nimport './Events.scss';\n\nconst Events = props => (\n    <div className=\"Events\">\n        <h2>Events</h2>\n    </div>\n);\n\nexport default Events;","import React from 'react';\nimport './Enemies.scss';\n\nconst Enemies = props => (\n    <div className=\"Enemies\">\n        <h2>Enemies</h2>\n    </div>\n);\n\nexport default Enemies;","import React from 'react';\nimport './Items.scss';\n\nconst Items = props => (\n    <div className=\"Items\">\n        <h2>Items</h2>\n    </div>\n);\n\nexport default Items;","import React from 'react';\nimport './Sidebar.scss';\nimport Tiles from '../../components/Editor/Sidebar/Tiles';\nimport Events from '../../components/Editor/Sidebar/Events';\nimport Enemies from '../../components/Editor/Sidebar/Enemies';\nimport Items from '../../components/Editor/Sidebar/Items';\n\nconst Sidebar = props => (\n    <div className=\"Sidebar\">\n        {\n            (props.layer === 'ground') ? <Tiles\n                tiles={props.tiles}\n                setTile={props.setTile}\n                tile={props.tile}\n            /> : (\n                <div>\n                    <Events />\n                    <Enemies />\n                    <Items />\n                </div>\n            )\n        }\n        <h2>Tips</h2>\n        <p>Use the +/- keys to zoom in and out.</p>\n    </div>\n)\n\nexport default Sidebar;","import React from 'react';\nimport firebase from '../../firebase.temp.json';\nimport './Map.scss';\n\nconst Map = props => {\n\n    function image(x, y) {\n        const tile = props.tiles[props.map.tiles[y][x].tile];\n        return `/images/tiles/${tile.image}`;\n    }\n\n    return (\n        <div className=\"Map\">\n            <div style={{\n                height: `${props.size}px`,\n                width: `${props.size}px`\n            }}>\n                {\n                    (() => {\n                        const grid = new Array(10).fill(new Array(10).fill(null));\n                        return grid.map((row, y) => {\n                            return row.map((column, x) => {\n                                const tile = props.map.tiles[y][x];\n                                return (\n                                    <div\n                                        data-x={x}\n                                        data-y={y}\n                                        key={`tile-${x}-${y}`}\n                                        style={{\n                                            backgroundImage: `url(${image(x, y)})`,\n                                            border: (props.layer === 'player') ? 'solid thin #FFF' : null,\n                                            opacity: (\n                                                props.selected[0] === y && \n                                                props.selected[1] === x &&\n                                                props.layer === 'player'\n                                            ) ? '0.5' : null\n                                        }}\n                                        className=\"clickable\"\n                                        onMouseEnter={event => (event.altKey) ? props.updateTile(x, y) : null}\n                                        onClick={() => {\n                                            if (props.layer === 'ground') {\n                                                props.updateTile(x, y)\n                                            } else if (props.layer === 'player') {\n                                                props.updateSelected(y, x);\n                                            }\n                                        }}\n                                    >\n                                        {\n                                            (tile.enemy && props.layer === 'player') ? (\n                                                <div \n                                                    className=\"Enemy\"\n                                                    style={{\n                                                        backgroundImage: `url(https://jadeallencook.github.io/Game-Map-Editor/build/images/enemies/${firebase.enemies[tile.enemy].image})`\n                                                    }}\n                                                ></div>\n                                            ) : null\n                                        }\n                                    </div>\n                                )\n                            });\n                        });\n                    })()\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Map;","import React from 'react';\nimport './Zoom.scss';\n\nconst Zoom = props => (\n    <ul className=\"Zoom\">\n        <li className=\"clickable\" onClick={() => props.zoom(25)}>+</li>\n        <li className=\"clickable\" onClick={() => props.zoom(-25)}>-</li>\n    </ul>\n);\n\nexport default Zoom;","import React, { Component } from 'react';\nimport './Editor.scss';\nimport firebase from '../firebase.temp.json';\n\nimport Toolbar from '../components/Editor/Toolbar';\nimport Sidebar from '../components/Editor/Sidebar';\nimport Map from '../components/Editor/Map';\nimport Zoom from '../components/Editor/Zoom';\n\nclass Editor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            map: null,\n            maps: null,\n            game: null,\n            tile: null,\n            tiles: null,\n            selected: [0, 0],\n            layer: 'ground',\n            size: 600\n        };\n    }\n\n    componentDidMount() {\n        let { game } = this.props;\n        game = (game) ? firebase.games[game] : null;\n        const uid = (game) ? game.maps[0] : null;\n        const maps = (game) ? game.maps.map(key => {\n            return {\n                title: firebase.maps[key].title,\n                uid: key\n            }\n        }) : null;\n        const tiles = firebase.tiles;\n        const tile = Object.keys(tiles)[0];\n        let map = (game && uid) ? firebase.maps[uid] : null;\n        if (map) {\n            map.uid = uid;\n        }\n        this.setState({\n            ...this.state,\n            game: game,\n            map: map,\n            maps: maps,\n            tiles: tiles,\n            tile: tile\n        });\n        this.keys();\n    }\n\n    keys() {\n        document.onkeydown = event => {\n            const { key } = event;\n            if (key === '-') {\n                this.zoom(-25);\n            } else if (key === '=') {\n                this.zoom(25);\n            }\n        }\n    }\n\n    zoom(num) {\n        num = this.state.size + num;\n        this.setState({\n            ...this.state,\n            size: (num > 500) ? num : 500\n        })\n    }\n\n    loadMap(event) {\n        const { value } = event.target;\n        this.setState({\n            ...this.state,\n            map: firebase.maps[value]\n        });\n    }\n\n    deleteMap(event) {\n        event.preventDefault();\n    }\n\n    createMap(event) {\n        event.preventDefault();\n    }\n\n    setTile(uid) {\n        this.setState({\n            ...this.state,\n            tile: uid\n        });\n    }\n\n    updateTile(x, y) {\n        if (this.state.layer === 'ground') {\n            let map = this.state.map;\n            map.tiles[y][x].tile = this.state.tile;\n            this.setState({\n                ...this.state,\n                map: map\n            });\n        }\n    }\n\n    toggleLayer(event) {\n        this.setState({\n            ...this.state,\n            layer: event.target.value\n        });\n    }\n\n    updateSelected(y, x) {\n        this.setState({\n            ...this.state,\n            selected: [y, x]\n        })\n    }\n\n    render() {\n        return (this.state.game && this.state.map && this.state.maps && this.state.tiles) ? (\n            <div className=\"Editor\">\n                <Toolbar\n                    loadMap={this.loadMap.bind(this)}\n                    deleteMap={this.deleteMap.bind(this)}\n                    createMap={this.createMap.bind(this)}\n                    toggleLayer={this.toggleLayer.bind(this)}\n                    maps={this.state.maps}\n                    selected={this.state.selected}\n                />\n                <div>\n                    <Sidebar\n                        setTile={this.setTile.bind(this)}\n                        tiles={this.state.tiles}\n                        tile={this.state.tile}\n                        layer={this.state.layer}\n                    />\n                    <Map\n                        size={this.state.size}\n                        map={this.state.map}\n                        tiles={this.state.tiles}\n                        layer={this.state.layer}\n                        updateTile={this.updateTile.bind(this)}\n                        selected={this.state.selected}\n                        updateSelected={this.updateSelected.bind(this)}\n                    />\n                    <Zoom\n                        zoom={this.zoom.bind(this)}\n                    />\n                </div>\n            </div>\n        ) : (\n                <div className=\"Editor\">\n                    <h2>Loading Editor...</h2>\n                </div>\n            )\n    }\n}\n\nexport default Editor;\n","import React from 'react';\nimport './Player.scss';\n\nconst Player = props => (\n    <div\n        className=\"Player\"\n        id=\"player\"\n        style={{\n            backgroundImage: `url(https://jadeallencook.github.io/Game-Map-Editor/build/images/players/${props.image})`,\n            transform: `rotate(${props.facing * 90}deg)`\n        }}\n    ></div>\n);\n\nexport default Player;","import React, { Component } from 'react';\nimport firebase from '../firebase.temp.json';\nimport Player from '../components/Play/Player';\nimport { Link } from 'react-router-dom';\nimport getNextPosition from '../services/get-next-position';\nimport './Play.scss';\n\nclass Play extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: null,\n            map: null,\n            events: null,\n            history: [{\n                text: 'New game started...',\n                time: new Date().toLocaleString()\n            }],\n            tiles: firebase.tiles,\n            player: {\n                image: null,\n                facing: 0,\n                position: {\n                    x: null,\n                    y: null\n                },\n                hearts: null,\n                xp: null,\n                attack: null,\n                defense: null,\n            }\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.game) {\n            const game = firebase.games[this.props.game];\n            const { start } = game;\n            const map = firebase.maps[start.map];\n            const player = firebase.players[game.player];\n            this.setState({\n                ...this.state,\n                title: game.title,\n                map: map,\n                player: {\n                    image: player.image,\n                    facing: 1,\n                    position: {\n                        x: start.x,\n                        y: start.y\n                    },\n                    hearts: player.hearts,\n                    xp: player.xp,\n                    attack: player.attack,\n                    defense: player.defense\n                },\n            })\n        }\n        document.onkeydown = event => {\n            const { keyCode } = event;\n            if (keyCode >= 37 && keyCode <= 40) {\n                const direction = keyCode - 37;\n                const nextPosition = getNextPosition(direction, { ...this.state.player.position });\n                const nextTile = this.state.tiles[this.state.map.tiles[nextPosition.y][nextPosition.x].tile];\n                let enemy = this.state.map.tiles[nextPosition.y][nextPosition.x].enemy;\n                let canMove = true;\n                if (direction === 0 && !nextTile.walk[2]) canMove = false;\n                if (direction === 1 && !nextTile.walk[3]) canMove = false;\n                if (direction === 2 && !nextTile.walk[0]) canMove = false;\n                if (direction === 3 && !nextTile.walk[1]) canMove = false;\n                if (JSON.stringify(this.state.player.position) === JSON.stringify(nextPosition)) canMove = false;\n                let history = this.state.history.slice(0, 25);\n                let message = {};\n                message.text = (canMove) ? (enemy) ? 'You fight an enemy.' : 'You move forward.' : 'You bump into a wall.';\n                message.time =  new Date().toLocaleString();\n                history = (message.text === history[0].text) ? history : [message, ...history];\n                this.setState({\n                    ...this.state,\n                    history: history,\n                    player: {\n                        ...this.state.player,\n                        facing: direction,\n                        position: {\n                            ...(canMove) ? nextPosition : this.state.player.position\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    render() {\n        return (this.state.map) ? (\n            <div className=\"Play\">\n                <h2>{this.state.title}</h2>\n                <div id=\"menu\">\n                    <div>\n                        <span>XP: {this.state.player.xp}</span>\n                        <span>HEARTS: {this.state.player.hearts}</span>\n                        <span>ATTACK: {this.state.player.attack}</span>\n                        <span><a href={`data:text/plain;charset=utf-8,${JSON.stringify(this.state.map)}`} download=\"map.json\">Download map file</a></span>\n                    </div><div>\n                        <span>MAP: {this.state.map.title}</span>\n                        <span>X: {this.state.player.position.x}</span>\n                        <span>Y: {this.state.player.position.y}</span>\n                        <span><Link to=\"/\">Return editor</Link></span>\n                    </div>\n                </div>\n                <div id=\"game\">\n                    {\n                        new Array(10).fill(null).map((column, y) => {\n                            return new Array(10).fill(null).map((row, x) => {\n                                const tile = this.state.map.tiles[y][x];\n                                const key = tile.tile;\n                                const image = firebase.tiles[key].image;\n                                return (\n                                    <div\n                                        tile={key}\n                                        key={`tile-${y}-${x}`}\n                                        style={{\n                                            backgroundImage: `url(/images/tiles/${image})`\n                                        }}\n                                    >\n                                        {\n                                            (\n                                                this.state.player.position.x === x &&\n                                                this.state.player.position.y === y\n                                            ) ? (\n                                                <Player \n                                                    facing={this.state.player.facing} \n                                                    image={this.state.player.image} \n                                                />\n                                            ) : (tile.enemy) ? (\n                                                <div \n                                                    className=\"Enemy\"\n                                                    style={{\n                                                        backgroundImage: `url(https://jadeallencook.github.io/Game-Map-Editor/build/images/enemies/${firebase.enemies[tile.enemy].image})`\n                                                    }}\n                                                ></div>\n                                            ) : null\n                                        }\n                                    </div>\n                                )\n                            });\n                        })\n                    }\n                </div>\n                <ul id=\"story\">\n                    {\n                        this.state.history.map((message, x) => {\n                            return (\n                                <li key={`message-${x}`}>\n                                    <b>{message.time}:</b> {message.text}</li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        ) : (\n            <div className=\"Play\">\n                <h2>Loading game...</h2>\n            </div>\n        );\n    }\n}\n\nexport default Play;\n","export default (direction, position) => {\n    const isVertical = (((direction / 2) % 1) > 0);\n    let { x, y } = position;\n    x = (isVertical) ? x : (!direction) ? (x - 1 < 0) ? 0 : x - 1 : (x + 1 > 9) ? 9 : x + 1;\n    y = (!isVertical) ? y : (direction === 1) ? (y - 1 < 0) ? 0 : y - 1 : (y + 1 > 9) ? 9 : y + 1;\n    return {\n        x: x,\n        y: y\n    };\n}","import React, { Component } from 'react'; \nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport './App.scss';\nimport firebase from './firebase.temp.json';\n\nimport Editor from './pages/Editor';\nimport Play from './pages/Play';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      auth: true,\n      user: null,\n      game: null\n    };\n  }\n\n  componentDidMount() {\n    this.login();\n  }\n\n  login() {\n    const uid = 'e72e6e98404f5132e';\n    const user = firebase.users[uid];\n    this.setState({\n      ...this.state,\n      user: user,\n      game: user.games[0]\n    });\n  }\n\n  load(uid) {\n    this.setState({\n      ...this.state,\n      game: uid\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path='/play' component={() => {\n              return (\n                <Play\n                  game={this.state.game}\n                />\n              );\n            }} />\n            <Route exact path='/edit' component={() => {\n              return (\n                <Editor\n                  game={this.state.game}\n                />\n              );\n            }} />\n            <Route exact path=\"/Game-Map-Editor/build\">\n              <Redirect to=\"/edit\" />\n            </Route>\n            <Route path=\"/*\">\n              <Redirect to=\"/edit\" />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}